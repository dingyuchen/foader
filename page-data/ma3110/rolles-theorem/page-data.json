{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/ma3110/rolles-theorem","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"rolles-theorem\"\n  }, \"Rolle's Theorem\"), mdx(\"p\", null, \"If $f$ is continuous on $\", \"[a, b]\", \"$ and differentiable on $(a, b)$ and $f(a) = f(b)$, then there exists $c \\\\in (a, b)$ such that\\n$$f'(c) = 0$$\"), mdx(\"h2\", {\n    \"id\": \"proof\"\n  }, \"Proof\"), mdx(\"h3\", {\n    \"id\": \"case-1-f-is-a-constant-function\"\n  }, \"Case 1: $f$ is a constant function\"), mdx(\"p\", null, \"Then $f'(x) = 0$ for all $x \\\\in (a, b)$.\"), mdx(\"h3\", {\n    \"id\": \"case-2-f-is-not-a-constant-function\"\n  }, \"Case 2: $f$ is \", mdx(\"strong\", {\n    parentName: \"h3\"\n  }, \"not\"), \" a constant function\"), mdx(\"p\", null, \"[\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"mean-value-theorem\",\n    \"title\": \"Mean Value Theorem\"\n  }), \"mean-value-theorem\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mean-value-theorem\"\n  }, \"Mean Value Theorem\"), mdx(\"p\", null, \"If $f$ is continuous on $\", \"[a, b]\", \"$ and differentiable on $(a, b)$ and $f(a) = f(b)$, then there exists $c \\\\in (a, b)$ such that\\n$$f'(c) = \\\\frac{f(b) - f(a)}{b - a}$$\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"There must be some point $c$ where the tangent to that point is parallel to the gradient between the ends of the interval.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"7d654e84-7928-5651-974e-d886b29719d3","fields":{"slug":"/ma3110/mean-value-theorem","title":"Mean Value Theorem"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"differentiation\"\n  }, \"Differentiation\"), mdx(\"p\", null, \"#math\"), mdx(\"p\", null, \"Chapter 6 of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://sciencemathematicseducation.files.wordpress.com/2014/01/0471433314realanalysis4.pdf\"\n  }), \"Introduction to Real Analysis\")), mdx(\"h2\", {\n    \"id\": \"limits-of-functions\"\n  }, \"Limits of functions\"), mdx(\"p\", null, \"Roughly speaking, a function $f$ has a limit $L$ at the point $x = a$ if\\n$$x \\\\approx a \\\\Rightarrow f(x) \\\\approx L$$\"), mdx(\"h2\", {\n    \"id\": \"inverse-function-theorem\"\n  }, \"Inverse Function Theorem\"), mdx(\"p\", null, \"[\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"inverse-function-theorem\",\n    \"title\": \"Inverse Function Theorem\"\n  }), \"inverse-function-theorem\"), \"]\"), mdx(\"h2\", {\n    \"id\": \"mean-value-theorem-and-applications\"\n  }, \"Mean Value Theorem and Applications\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"rolles-theorem\",\n    \"title\": \"Rolle's Theorem\"\n  }), \"rolles-theorem\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"mean-value-theorem\",\n    \"title\": \"Mean Value Theorem\"\n  }), \"mean-value-theorem\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cauchy's Mean Value Theorem\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taylor's Theorem\")), mdx(\"p\", null, \"[\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"interior-extremum-theorem\",\n    \"title\": \"Interior Extremum Theorem\"\n  }), \"interior-extremum-theorem\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"95a2601b-38ba-5747-a787-97c0d7ceba6a","fields":{"slug":"/ma3110/differentiation","title":"Differentiation"}}}]},"fields":{"slug":"/ma3110/rolles-theorem","title":"Rolle's Theorem"}}},"pageContext":{"id":"c494b8f8-cc5f-55d1-898d-e9d43175e42e"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}