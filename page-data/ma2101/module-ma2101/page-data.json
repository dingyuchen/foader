{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/ma2101/module-ma2101","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"linear-algebra-2\"\n  }, \"Linear Algebra 2\"), mdx(\"p\", null, \"#entry\"), mdx(\"h2\", {\n    \"id\": \"textbook\"\n  }, \"Textbook\"), mdx(\"p\", null, \"Linear Algebra Done Right - Sheldon Axler\"), mdx(\"h2\", {\n    \"id\": \"assessment\"\n  }, \"Assessment\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Test\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Weightage\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Online Test\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"30%\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Online Test\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"35%\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Online Test\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"35%\")))), mdx(\"h2\", {\n    \"id\": \"content\"\n  }, \"Content\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"linear-transformation\",\n    \"title\": \"Linear Transformation\"\n  }, \"linear-transformation\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"trace-of-a-matrix\",\n    \"title\": \"Trace of a Matrix\"\n  }, \"trace-of-a-matrix\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"vector-space\",\n    \"title\": \"Vector Space\"\n  }, \"vector-space\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"linear-mappings\",\n    \"title\": \"Linear Mappings\"\n  }, \"linear-mappings\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"linear-transformation\"\n  }, \"Linear Transformation\"), mdx(\"p\", null, \"Transformation is a rule that turns \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"vectors\"), \" into other \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"vectors\"), \".\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Linear\"), \" Transformation is a rule that also satisfies the following rules:\\n$$T(c \\\\vec u) = cT(\\\\vec u)$$\\n$$T(\\\\vec u + \\\\vec v) = T(\\\\vec u) + T(\\\\vec v)$$\"), mdx(\"h2\", {\n    \"id\": \"matrix-of-a-linear-transformation\"\n  }, \"Matrix of a Linear Transformation\"), mdx(\"p\", null, \"The usual vectors $\\\\hat i$ and $\\\\hat j$ define a square.\"), mdx(\"p\", null, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"singular-linear-transformation\",\n    \"title\": \"Singular Linear Transformation\"\n  }, \"singular-linear-transformation\"), \"]\"), mdx(\"h2\", {\n    \"id\": \"determinants\"\n  }, \"Determinants\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"area\"), \" of a parallelogram formed by 2 vectors is $\\\\vert \\\\vec u \\\\times \\\\vec v \\\\vert$, as can be seen:\"), mdx(\"p\", null, \"$$\\\\text{Area} = \\\\text{Height x Base} = (\\\\vert \\\\vec v \\\\vert \\\\sin \\\\theta) \\\\times \\\\vert \\\\vec u \\\\vert = \\\\vert \\\\vec u \\\\vert \\\\vert \\\\vec v \\\\vert \\\\sin \\\\theta = \\\\vert \\\\vec u \\\\times \\\\vec v \\\\vert$$\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"volume\"), \" of a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"parallelopiped\"), \" is\"), mdx(\"p\", null, \"$$\\n\\\\vert \\\\vec u \\\\times \\\\vec v \\\\vert \\\\vert \\\\vec w \\\\vert \\\\vert \\\\cos \\\\theta \\\\vert = \\\\vert \\\\vec u \\\\times \\\\vec v \\\\cdot \\\\vec w \\\\vert\\n$$\"), mdx(\"h3\", {\n    \"id\": \"properties-of-determinants\"\n  }, \"Properties of Determinants\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\text{det} \\\\; ST = \\\\text{det} \\\\; TS = (\\\\text{det} \\\\; S)\\\\times (\\\\text{det} \\\\; T)$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\text{det} \\\\; M^T = \\\\text{det} \\\\; M$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\text{det} \\\\; (cM) = c^n \\\\text{det} \\\\; M$\")), mdx(\"h2\", {\n    \"id\": \"inverse\"\n  }, \"Inverse\"), mdx(\"p\", null, \"For a $2 \\\\times 2$ matrix,\"), mdx(\"p\", null, \"$$\\n\\\\begin{bmatrix}\\na & b \", \"\\\\\", \"\\nc & d \", \"\\\\\", \"\\n\\\\end{bmatrix}^{-1} =  \\\\frac{1}{ad - bc}\\n\\\\begin{bmatrix}\\nd & -b \", \"\\\\\", \"\\n-c & a \", \"\\\\\", \"\\n\\\\end{bmatrix}\\n$$\"), mdx(\"h3\", {\n    \"id\": \"general-way-to-find-inverse\"\n  }, \"General way to find Inverse\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Work out the cofactors (determinants without the element)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Keep or reverse signs of every element\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Take the transpose\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Divide by the determinant of the original matrix\")), mdx(\"h2\", {\n    \"id\": \"system-of-linear-equations\"\n  }, \"System of Linear Equations\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If det $M \\\\neq 0$, then there is an unique solution.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If det $M = 0$, there is probably no solution. But if there is one, then there will be many.\")), mdx(\"h2\", {\n    \"id\": \"eigenvectors-and-eigenvalues\"\n  }, \"Eigenvectors and Eigenvalues\"), mdx(\"p\", null, \"Some linear transformations do not change the direction of a vector.\"), mdx(\"p\", null, \"eg. $\\\\begin{bmatrix} 1 & 2 \", \"\\\\\", \" 2 & -2\\\\end{bmatrix}\\\\begin{bmatrix} 2 \", \"\\\\\", \" 1\\\\end{bmatrix} = \\\\begin{bmatrix} 4 \", \"\\\\\", \" 2\\\\end{bmatrix}$\"), mdx(\"p\", null, \"In general if a transformation $T$ does not change the direction of a vector $\\\\vec u$, that is \"), mdx(\"p\", null, \"$$T \\\\vec u = \\\\lambda \\\\vec u$$\"), mdx(\"p\", null, \"for some $\\\\lambda$ (scalar), then $\\\\vec u$ is called an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"eigenvector\"), \" of $T$.\\nThe scalar $\\\\lambda$ is called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"eigenvalue\"), \" of $\\\\vec u$.\"), mdx(\"h3\", {\n    \"id\": \"finding-eigenvectors-and-eigenvalues\"\n  }, \"Finding Eigenvectors and Eigenvalues\"), mdx(\"p\", null, \"$$T \\\\vec u = \\\\lambda \\\\vec u \\\\Rightarrow (T - \\\\lambda I) \\\\vec u = \\\\vec 0$$\"), mdx(\"p\", null, \"Hence det$(T - \\\\lambda I) = 0$.\\nThis can be solved as a linear equation.\"), mdx(\"p\", null, \"In general, there are $n$ answers for $n \\\\times n$ matrices. (but not always!)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Important note that eigenvectors are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"not unique\"), \". (A scalar multiple of an eigenvector is also an eigenvector)\")), mdx(\"h2\", {\n    \"id\": \"change-of-basis\"\n  }, \"Change of Basis\"), mdx(\"p\", null, \"$$L \\\\vec u = P^{-1}TP P^{-1} \\\\vec i = P^{-1}(T\\\\vec i)$$\"), mdx(\"h2\", {\n    \"id\": \"diagonalization\"\n  }, \"Diagonalization\"), mdx(\"p\", null, \"The matrix of a transformation relative to its eigenvectors is diagonal.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"381571d6-5b70-5c5f-8252-150c98ca4190","fields":{"slug":"/ma2101/linear-transformation","title":"Linear Transformation"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"trace-of-a-matrix\"\n  }, \"Trace of a Matrix\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"trace\"), \" of $M$ denoted $TrM$, is defiend as the sum of the diagonal entries.\"), mdx(\"p\", null, \"In general $TrMN = TrNM$.\"), mdx(\"p\", null, \"Hence $Tr(P^{-1} A P) = Tr(A PP^{-1}) = Tr(A)$\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The trace of a matrix is always the same no matter which basis you use.\")), mdx(\"p\", null, \"In particular for diagonalizable matrices, the trace is equal to the sum of the eigenvalues.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"0bb9c4e2-e2d9-5b44-90f1-2dac270f117b","fields":{"slug":"/ma2101/trace-of-a-matrix","title":"Trace of a Matrix"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"vector-space\"\n  }, \"Vector Space\"), mdx(\"h2\", {\n    \"id\": \"vector\"\n  }, \"Vector\"), mdx(\"p\", null, \"The basic idea is that vectors are things that can be multiplied by numbers and added together.\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"vector space\"), \" is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"any\"), \" set of things that can be multiplied by numbers and added together.\"), mdx(\"p\", null, \"Something in the form \"), mdx(\"p\", null, \"$$ a x + b y = c z$$\"), mdx(\"h2\", {\n    \"id\": \"scalar\"\n  }, \"Scalar\"), mdx(\"p\", null, \"A scalar can be either real or complex. Scalars are elements of $\\\\mathcal{F} = \\\\R \\\\cup \\\\Complex$.\"), mdx(\"h2\", {\n    \"id\": \"vector-space-1\"\n  }, \"Vector Space\"), mdx(\"p\", null, \"Vector spaces are just sets that are given properties to make them resemble $\\\\mathcal{F}^n$.\"), mdx(\"h3\", {\n    \"id\": \"vector-space-isomorphisms\"\n  }, \"Vector Space Isomorphisms\"), mdx(\"hr\", null), mdx(\"p\", null, \"Recall:\"), mdx(\"p\", null, \"Let $S$ and $T$ be 2 sets. A mapping $F : S \\\\rightarrow T$ is called a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"surjection\"), \" if for any $t \\\\in T$, there exists $s \\\\in S$ such that $F(s) = t$.\"), mdx(\"p\", null, \"A mapping is an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"injection\"), \" if for all $s_1, s_2 \\\\in S, F(s_1) = F(s_2)$ implies that $s_1 = s_2$.\"), mdx(\"p\", null, \"A mapping is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bijection\"), \" if it is both surjective and injective.\"), mdx(\"p\", null, \"$F$ has an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"inverse\"), \" iff it is a bijection.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Let $U$ and $V$ be vector spaces.\\nA mapping $\\\\Phi : U \\\\rightarrow V$ is said to be a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"vector space homomorphism\"), \" if $\\\\forall u \\\\in U, v \\\\in U, a \\\\in \\\\mathcal{F}$.\"), mdx(\"p\", null, \"$$ \\\\Phi(u + v) = \\\\Phi(u) + \\\\Phi(v)$$\"), mdx(\"p\", null, \"$$ \\\\Phi(au) = a\\\\Phi(u)$$\"), mdx(\"p\", null, \"If there exits a vector space homomorphism from $U$ to $V$ which is a bijection,\\nthen we call the homomorphism an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isomorphism\"), \".\"), mdx(\"h2\", {\n    \"id\": \"dimensions\"\n  }, \"Dimensions\"), mdx(\"p\", null, \"A vector space is said to be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"finite-dimensional over\"), \" $\\\\mathcal{F}$ if it is isomorphic to $\\\\mathcal{F}^n$ for some (finite) integer $n$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"No finite-dimensional vector space can be isomorphic to $\\\\mathcal{F}^n$ for two different values of $n$, so this number is a fixed property of the vector space, called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dimension\"), \" of the vector space.\")), mdx(\"p\", null, \"Vector spaces that aer not finite-dimensional are called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"infinite-dimensional\"), \".\"), mdx(\"h2\", {\n    \"id\": \"span-linear-independence-basis\"\n  }, \"Span, Linear Independence, Basis\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linear combination\"), \" of the elements of a list of vectors $v_i$ is just any vector of the form $a^1v_1 + a^2v_2 + ...$ where the $a^i$ are scalars.\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"span\"), \" of a list of vectors is defined to be the set of all linear combinations of vectors in the list.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Example the space of the list $\", \"{\", \" \\\\binom{1}{0}, \\\\binom{0}{1} \", \"}\", \"$ is all of $\\\\mathcal{F}^2$.\")), mdx(\"p\", null, \"A list of vectors $v_i \\\\in V$ is said to be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linearly independent\"), \" if the equation $\\\\sum a^iv_i = 0$ implies $a^i = 0$ for every $i$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Vectors in the span of a linearly independent vectors can be expressed as a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"unique\"), \" linear combination.\")), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"basis\"), \" of a vector space $V$ is any list of vectors in $V$ which \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"both\"), \" spans $V$ and is linearly independent.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Every finite-dimensional vector space has a basis.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"No vector space ever has just 1 basis.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Suppose $U$ is a subspace of a finite-dimensional vector space $W$. Then $W$ has another subspace, $V$, such that $W = U \\\\oplus V$\"), mdx(\"h3\", {\n    \"id\": \"bases\"\n  }, \"Bases\"), mdx(\"p\", null, \"We can express any vector $v$ in a finite-dimensional vector space $V$ as $v = a^i z_i$.\"), mdx(\"p\", null, \"The numbers $a^i$ are called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"components\"), \" of $v$ relative to this basis.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Think of basis vectors as a mapping from a list of scalars to a vector $v$.\")), mdx(\"p\", null, \"Clearly, this map is surjective (every vector can be expressed in terms of components) and injective (this can be done only in one way).\\nSo as a mapping, a basis is a bijection.\"), mdx(\"p\", null, \"Furthermore, $z$ is a vector space isomorphism.\"), mdx(\"h4\", {\n    \"id\": \"canonical-basis\"\n  }, \"Canonical Basis\"), mdx(\"p\", null, \"We define $\", \"{\", \"e_i\", \"}\", \"$ to be the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"canonical basis\"), \" of $\\\\mathcal{F}$.\"), mdx(\"p\", null, \"Now suppose that $\\\\Phi : \\\\mathcal{F}^n \\\\rightarrow V$ is a vector space isomorphism. Then the set of vectors $z_i \\\\equiv \\\\Phi(e_i)$ is a basis for $V$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The number of vectors in a basis is always equal to the dimension of the vector space.\")), mdx(\"p\", null, \"Suppose $U_1$ and $U_2$ are subspaces of a finite-dimensional vector space, with intersection consisting only of the zero vector. Then $\\\\dim(U_1 \\\\oplus U_2) = \\\\dim(U_1) + \\\\dim(U_2)$.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"54231c12-f496-55ea-a757-bab01ea8eb50","fields":{"slug":"/ma2101/vector-space","title":"Vector Space"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"linear-mappings\"\n  }, \"Linear Mappings\"), mdx(\"p\", null, \"Let $V$ and $W$ be vector spaces.\"), mdx(\"p\", null, \"A mapping $T : V \\\\rightarrow W$ is called a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linear\"), \" mapping if it \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"preserves the vector structure\"), \".\\nThat is,\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$T(u + v) = T(u) + T(v) \\\\; \\\\forall u, v \\\\in V$\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$T(au + v) = aT(u) + T(v) \\\\; \\\\forall a \\\\in \\\\mathcal{F}, \\\\forall u \\\\in V$\")), mdx(\"p\", null, \"The set of linear mappings from $V$ to $W$ is denoted $\\\\mathcal{L}(V, W)$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Not every element of $\\\\mathcal{L}$ is a basis, because not all of them are bijections.\")), mdx(\"h2\", {\n    \"id\": \"everything-is-a-vector\"\n  }, \"Everything is a Vector\"), mdx(\"p\", null, \"The vector space $\\\\mathcal{L}(V, \\\\mathcal{F})$ is called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dual\"), \" space to the space $V$, denoted as $\\\\hat V$.\\nSo if $\\\\alpha \\\\in \\\\hat V$, then for any $u \\\\in V$, $\\\\alpha(u)$ is just a number.\"), mdx(\"p\", null, \"This means that vectors are linear transformations.\"), mdx(\"p\", null, \"Define $aT$ where $a$ is a scalar and $T$ is a linear maping from $V$ to $W$ as\"), mdx(\"p\", null, \"$$ (aT)u \\\\equiv a(Tu) \\\\; \\\\forall u \\\\in V$$\"), mdx(\"p\", null, \"and since\"), mdx(\"p\", null, \"$$ (T_1 + T_2)(u) = T_1(u) + T_2(u) \\\\; \\\\forall u \\\\in V$$\"), mdx(\"p\", null, \"So the set of linear transformations from $V$ to $W$ is a vector space.\"), mdx(\"h3\", {\n    \"id\": \"zero-vector-of-transformations\"\n  }, \"Zero Vector of Transformations\"), mdx(\"p\", null, \"The mapping that takes every element of a vector space to its zero vector is an element of $\\\\mathcal{L}(V, V)$, which is the zero vector in the vector space $\\\\mathcal{L}(V, V)$.\"), mdx(\"h2\", {\n    \"id\": \"kernel-and-range\"\n  }, \"Kernel and Range\"), mdx(\"p\", null, \"If $T \\\\in \\\\mathcal{L}(V, W)$, then the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"kernel\"), \" of $T$, $\\\\ker(T)$, is the set of elements in $V$ that are mapped to the zero vector in $W$.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$\\\\ker(T)$ is a subspace of $V$.\")), mdx(\"p\", null, \"The dimension of $\\\\ker(T)$ is traditionally called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nullity\"), \" of $T$, $Null(T)$.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$T$ is injective iff $\\\\ker(T)$ consists of the zero vector only. ($Null(T) = 0$)\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"15dabbb7-b94e-5abf-8585-ae2fee8271b9","fields":{"slug":"/ma2101/linear-mappings","title":"Linear Mappings"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bubble-foader\"\n  }, \"Bubble Foader\"), mdx(\"p\", null, \"#entry\"), mdx(\"p\", null, \"\\uD83D\\uDC4B Welcome to my Foam Knowledge Base!\"), mdx(\"h2\", {\n    \"id\": \"navigation\"\n  }, \"Navigation\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"dingyuchen.github.io\"\n  }, \"blog\"), \" - This is where I keep my blog\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"inbox\",\n    \"title\": \"Inbox\"\n  }, \"inbox\"), \"] - a place to write down quick notes to be categorised later\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"todo\",\n    \"title\": \"Todo\"\n  }, \"todo\"), \"] - a place to keep track of things I want/need to do\")), mdx(\"h3\", {\n    \"id\": \"modules\"\n  }, \"Modules\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cs5330/module-5330\",\n    \"title\": \"Randomized Algorithms\"\n  }, \"module-5330\"), \"] - CS5330 Randomized Algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-dyom/distributed-dyom\",\n    \"title\": \"Distributed Systems\"\n  }, \"distributed-dyom\"), \"] - DYOM Distributed Systems\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"st2131/module-2131\",\n    \"title\": \"Probability\"\n  }, \"module-2131\"), \"] - ST2131 Probability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"ma3110/module-ma3110\",\n    \"title\": \"Mathematical Analysis 2\"\n  }, \"module-ma3110\"), \"] - MA3110 Mathematical Analysis 2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"ma2101/module-ma2101\",\n    \"title\": \"Linear Algebra 2\"\n  }, \"module-ma2101\"), \"] - MA2101 Linear Algebra 2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"ma2104/module-ma2104\",\n    \"title\": \"Multivariable Calculus\"\n  }, \"module-ma2104\"), \"] - MA2104 Multivariable Calculus\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"ma3252/module-ma3252\",\n    \"title\": \"Linear and Network Optimization\"\n  }, \"module-ma3252\"), \"] - MA3252 Linear and Network Optimization\")), mdx(\"h3\", {\n    \"id\": \"other-collections\"\n  }, \"Other Collections\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"misc/books\",\n    \"title\": \"Books I've Read\"\n  }, \"books\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"making-your-own\"\n  }, \"Making your own\"), mdx(\"p\", null, \"This documentation assumes that you have a GitHub account and have \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/\"\n  }, \"Visual Studio Code\"), \" installed on your Linux/MacOS/Windows machine.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If you haven't yet, browse over to the main \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://foambubble.github.io/foam\"\n  }, \"Foam documentation workspace\"), \" to get an idea of what Foam is and how to use it.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Press \\\"Use this template\\\" button at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mathieudutour/foam-gatsby-template/generate\"\n  }, \"foam-gatsby-template\"), \" to fork it to your own GitHub account. If you want to keep your thoughts to yourself, remember to set the repository private.\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"This creates a gatsby template instead of the vanilla one used by Foam. It supports backlinking and graph out of the box.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unfortunately, it does not allow nested subfolders (pending PR merge) and latex.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository\"\n  }, \"Clone the repository to your local machine\"), \" and open it in VS Code.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Open the repository as a folder using the \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"File > Open...\"), \" menu item.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"When prompted to install recommended extensions, click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Install all\"), \" (or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Show Recommendations\"), \" if you want to review and install them one by one)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Open \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"_layouts/gatsby-config.js\"\n  }, \"_layouts/gatsby-config.js\"), \" and edit the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pathPrefix\"), \" to be the name of the repository.\"))), mdx(\"p\", null, \"After setting up the repository, head to [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"getting-started\",\n    \"title\": \"Getting Started\"\n  }, \"getting-started\"), \"] to get familiar with your new knowledge base!\"), mdx(\"p\", null, \"To learn more about how to use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Foam\"), \", read the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://foambubble.github.io/foam/recipes/recipes\"\n  }, \"Recipes\"), \" bubbles of the Foam documentation workspace.\"), mdx(\"p\", null, \"And remember that you can always join our  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://discord.gg/HV2tn2FpEk\"\n  }, \"Foam community on Discord\"), \"!\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b97941cc-9f81-5bf4-85d9-dcd0172036fd","fields":{"slug":"/readme","title":"Bubble Foader"}}}]},"fields":{"slug":"/ma2101/module-ma2101","title":"Linear Algebra 2"}}},"pageContext":{"id":"0a4b0a7f-5828-5219-9fd3-4d4c7579904f"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}