{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/ma2101/vector-space","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"vector-space\"\n  }, \"Vector Space\"), mdx(\"h2\", {\n    \"id\": \"vector\"\n  }, \"Vector\"), mdx(\"p\", null, \"The basic idea is that vectors are things that can be multiplied by numbers and added together.\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"vector space\"), \" is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"any\"), \" set of things that can be multiplied by numbers and added together.\"), mdx(\"p\", null, \"Something in the form \"), mdx(\"p\", null, \"$$ a x + b y = c z$$\"), mdx(\"h2\", {\n    \"id\": \"scalar\"\n  }, \"Scalar\"), mdx(\"p\", null, \"A scalar can be either real or complex. Scalars are elements of $\\\\mathcal{F} = \\\\R \\\\cup \\\\Complex$.\"), mdx(\"h2\", {\n    \"id\": \"vector-space-1\"\n  }, \"Vector Space\"), mdx(\"p\", null, \"Vector spaces are just sets that are given properties to make them resemble $\\\\mathcal{F}^n$.\"), mdx(\"h3\", {\n    \"id\": \"vector-space-isomorphisms\"\n  }, \"Vector Space Isomorphisms\"), mdx(\"hr\", null), mdx(\"p\", null, \"Recall:\"), mdx(\"p\", null, \"Let $S$ and $T$ be 2 sets. A mapping $F : S \\\\rightarrow T$ is called a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"surjection\"), \" if for any $t \\\\in T$, there exists $s \\\\in S$ such that $F(s) = t$.\"), mdx(\"p\", null, \"A mapping is an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"injection\"), \" if for all $s_1, s_2 \\\\in S, F(s_1) = F(s_2)$ implies that $s_1 = s_2$.\"), mdx(\"p\", null, \"A mapping is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bijection\"), \" if it is both surjective and injective.\"), mdx(\"p\", null, \"$F$ has an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"inverse\"), \" iff it is a bijection.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Let $U$ and $V$ be vector spaces.\\nA mapping $\\\\Phi : U \\\\rightarrow V$ is said to be a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"vector space homomorphism\"), \" if $\\\\forall u \\\\in U, v \\\\in U, a \\\\in \\\\mathcal{F}$.\"), mdx(\"p\", null, \"$$ \\\\Phi(u + v) = \\\\Phi(u) + \\\\Phi(v)$$\"), mdx(\"p\", null, \"$$ \\\\Phi(au) = a\\\\Phi(u)$$\"), mdx(\"p\", null, \"If there exits a vector space homomorphism from $U$ to $V$ which is a bijection,\\nthen we call the homomorphism an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isomorphism\"), \".\"), mdx(\"h2\", {\n    \"id\": \"dimensions\"\n  }, \"Dimensions\"), mdx(\"p\", null, \"A vector space is said to be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"finite-dimensional over\"), \" $\\\\mathcal{F}$ if it is isomorphic to $\\\\mathcal{F}^n$ for some (finite) integer $n$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"No finite-dimensional vector space can be isomorphic to $\\\\mathcal{F}^n$ for two different values of $n$, so this number is a fixed property of the vector space, called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dimension\"), \" of the vector space.\")), mdx(\"p\", null, \"Vector spaces that aer not finite-dimensional are called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"infinite-dimensional\"), \".\"), mdx(\"h2\", {\n    \"id\": \"span-linear-independence-basis\"\n  }, \"Span, Linear Independence, Basis\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linear combination\"), \" of the elements of a list of vectors $v_i$ is just any vector of the form $a^1v_1 + a^2v_2 + ...$ where the $a^i$ are scalars.\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"span\"), \" of a list of vectors is defined to be the set of all linear combinations of vectors in the list.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Example the space of the list $\", \"{\", \" \\\\binom{1}{0}, \\\\binom{0}{1} \", \"}\", \"$ is all of $\\\\mathcal{F}^2$.\")), mdx(\"p\", null, \"A list of vectors $v_i \\\\in V$ is said to be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linearly independent\"), \" if the equation $\\\\sum a^iv_i = 0$ implies $a^i = 0$ for every $i$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Vectors in the span of a linearly independent vectors can be expressed as a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"unique\"), \" linear combination.\")), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"basis\"), \" of a vector space $V$ is any list of vectors in $V$ which \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"both\"), \" spans $V$ and is linearly independent.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Every finite-dimensional vector space has a basis.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"No vector space ever has just 1 basis.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Suppose $U$ is a subspace of a finite-dimensional vector space $W$. Then $W$ has another subspace, $V$, such that $W = U \\\\oplus V$\"), mdx(\"h3\", {\n    \"id\": \"bases\"\n  }, \"Bases\"), mdx(\"p\", null, \"We can express any vector $v$ in a finite-dimensional vector space $V$ as $v = a^i z_i$.\"), mdx(\"p\", null, \"The numbers $a^i$ are called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"components\"), \" of $v$ relative to this basis.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Think of basis vectors as a mapping from a list of scalars to a vector $v$.\")), mdx(\"p\", null, \"Clearly, this map is surjective (every vector can be expressed in terms of components) and injective (this can be done only in one way).\\nSo as a mapping, a basis is a bijection.\"), mdx(\"p\", null, \"Furthermore, $z$ is a vector space isomorphism.\"), mdx(\"h4\", {\n    \"id\": \"canonical-basis\"\n  }, \"Canonical Basis\"), mdx(\"p\", null, \"We define $\", \"{\", \"e_i\", \"}\", \"$ to be the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"canonical basis\"), \" of $\\\\mathcal{F}$.\"), mdx(\"p\", null, \"Now suppose that $\\\\Phi : \\\\mathcal{F}^n \\\\rightarrow V$ is a vector space isomorphism. Then the set of vectors $z_i \\\\equiv \\\\Phi(e_i)$ is a basis for $V$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The number of vectors in a basis is always equal to the dimension of the vector space.\")), mdx(\"p\", null, \"Suppose $U_1$ and $U_2$ are subspaces of a finite-dimensional vector space, with intersection consisting only of the zero vector. Then $\\\\dim(U_1 \\\\oplus U_2) = \\\\dim(U_1) + \\\\dim(U_2)$.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"linear-algebra-2\"\n  }, \"Linear Algebra 2\"), mdx(\"p\", null, \"#entry\"), mdx(\"h2\", {\n    \"id\": \"textbook\"\n  }, \"Textbook\"), mdx(\"p\", null, \"Linear Algebra Done Right - Sheldon Axler\"), mdx(\"h2\", {\n    \"id\": \"assessment\"\n  }, \"Assessment\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Test\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Weightage\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Online Test\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"30%\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Online Test\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"35%\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Online Test\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"35%\")))), mdx(\"h2\", {\n    \"id\": \"content\"\n  }, \"Content\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"linear-transformation\",\n    \"title\": \"Linear Transformation\"\n  }, \"linear-transformation\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"trace-of-a-matrix\",\n    \"title\": \"Trace of a Matrix\"\n  }, \"trace-of-a-matrix\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"vector-space\",\n    \"title\": \"Vector Space\"\n  }, \"vector-space\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"linear-mappings\",\n    \"title\": \"Linear Mappings\"\n  }, \"linear-mappings\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"0a4b0a7f-5828-5219-9fd3-4d4c7579904f","fields":{"slug":"/ma2101/module-ma2101","title":"Linear Algebra 2"}}}]},"fields":{"slug":"/ma2101/vector-space","title":"Vector Space"}}},"pageContext":{"id":"54231c12-f496-55ea-a757-bab01ea8eb50"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}