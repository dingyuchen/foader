{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/cs5330/week1-lect","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"randomized-algorithms\"\n  }, \"Randomized Algorithms\"), mdx(\"h2\", {\n    \"id\": \"treaps\"\n  }, \"Treaps\"), mdx(\"p\", null, \"value, priority pairs.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"For any set of (key, priority) pairs, there is a unique treap containing that set.\\nThere is always a highest priority - the priority forms a heap \")), mdx(\"p\", null, \"The BST branches similar to the quicksort algorithm\\n[\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"../inbox\",\n    \"title\": \"Inbox\"\n  }), \"inbox\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"inbox\"\n  }, \"Inbox\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here you can write disorganised notes to be categorised later\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bullet points are useful, but it could be free form text as well\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sometimes it's better to just get things off your mind quickly, rather than stop to think where it belongs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But don't let this list get too long\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Move information to more specific documents and link to them.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This helps you navigate between documents quickly\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For example, you can \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \"+\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" this: [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"todo\",\n    \"title\": \"Todo\"\n  }), \"todo\"), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Some notes don't end up making sense the next day\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"That's ok, you can just delete them!\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can always find them in your git history, if you really need it!\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2a6dd8f9-327c-57d8-88b5-eee979e6e314","fields":{"slug":"/inbox","title":"Inbox"}}}],"inboundReferences":[]},"fields":{"slug":"/cs5330/week1-lect","title":"Randomized Algorithms"}}},"pageContext":{"id":"8b4bc108-1cd5-518f-a516-b2eef35ee3e1"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}