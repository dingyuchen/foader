{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/ma3252/geometry-of-linear-programming","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"geometry-of-linear-programming\"\n  }, \"Geometry of Linear Programming\"), mdx(\"h2\", {\n    \"id\": \"polyhedron\"\n  }, \"Polyhedron\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"polyhedron\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"polyhedral set\"), \" is a set of the form $\", \"{\", \"\\\\bold x \\\\in \\\\R^n \\\\vert \\\\bold{Ax} \\\\leq \\\\bold b \", \"}\", \"$, where $\\\\bold A \\\\in \\\\R^{m \\\\times n}$ and $\\\\bold b \\\\in \\\\R^m$\"), mdx(\"p\", null, \"Geometrically, ia polyhedron is a finite intersection of half spaces.\"), mdx(\"p\", null, \"The feasible region for a standard form LP $\", \"{\", \"\\\\bold x \\\\in \\\\R^n \\\\vert \\\\bold{Ax} = \\\\bold b, \\\\bold x \\\\geq 0 \", \"}\", \"$ is a polyhedron.\"), mdx(\"hr\", null), mdx(\"p\", null, \"We characterize the corner points of polyhedron\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"geometrically\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"algebraically\")), mdx(\"p\", null, \"The main result states that for a nonempty polyhedron $P$ \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$P$ has at least one corner point iff it does not contain a line.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If $P$ has a corner point, the search for optimal solutions to LPs can be restricted to finding corner points.\")), mdx(\"h2\", {\n    \"id\": \"corner-point\"\n  }, \"Corner Point\"), mdx(\"p\", null, \"Consider a convex set $P \\\\subset \\\\R^n$.\"), mdx(\"p\", null, \"A point $\\\\bold x^\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" \\\\in P$ is an \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"extreme point\"), \" of $P$ if whenever points $\\\\bold{y, z} \\\\in P$ and scalar $\\\\lambda \\\\in (0, 1)$ are such that $\\\\bold x^\"), \" = \\\\lambda \\\\bold y + (1 - \\\\lambda) \\\\bold z$, we have $\\\\bold y = \\\\bold z = \\\\bold x^*$.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If we try to extend a line passing $\\\\bold x^*$, the endpoints will be outside of the convex set.\")), mdx(\"p\", null, \"A point $\\\\bold x^\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" \\\\in P$ is a \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"vertex\"), \" of $P$ if there is a $c \\\\in P$ such that $\\\\bold c^T \\\\bold x^\"), \" > \\\\bold c^T \\\\bold y$ for all $\\\\bold y \\\\in P \\\\backslash \", \"{\", \"\\\\bold x^*\", \"}\", \"$.\"), mdx(\"h2\", {\n    \"id\": \"terminology\"\n  }, \"Terminology\"), mdx(\"p\", null, \"Consider $\\\\bold x^\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" \\\\in \\\\R^n$ and the constraint $\\\\bold a_i^T \\\\bold x^\"), \" \\\\gtreqqless b_i$.\"), mdx(\"p\", null, \"If $\\\\bold a_i^T \\\\bold x^\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" = b_i$, we say this constraint is \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"active/binding/tight\"), \" at $\\\\bold x^\"), \"$.\"), mdx(\"p\", null, \"Constraints $\\\\bold a_i^T \\\\bold x^* \\\\geq b_i, i \\\\in I$ are said to be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linearly independent\"), \" if the corresponding vectors $\\\\bold a_i, i \\\\in I$ are linearly independent.\"), mdx(\"p\", null, \"$\\\\bold x^\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" \\\\in \\\\R^n$ is a \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"basic feasible solution\"), \" (BFS) of a polyhedron $P$ if $\\\\bold x^\"), \" \\\\in P$ and $n$ linearly independent constraints are active at $\\\\bold x^*$.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"linear-and-network-optimization\"\n  }, \"Linear and Network Optimization\"), mdx(\"h2\", {\n    \"id\": \"preface\"\n  }, \"Preface\"), mdx(\"p\", null, \"This module is about\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optimization problems which can be formulated as linear and network optimization problems.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linear Programming\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simplex method\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Geometrical aspects and mathematical theory\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Problems which may be formulated using graphs and networks\")))), mdx(\"h2\", {\n    \"id\": \"module-information\"\n  }, \"Module Information\"), mdx(\"h3\", {\n    \"id\": \"textbook\"\n  }, \"Textbook\"), mdx(\"p\", null, \"There are no textbooks for this class, but many introductory books on operations research have a good discussion on the material in this class.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introduction to Linear Optimization by D. Bertsimas and J. Tsitsiklis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linear Programming\")), mdx(\"h3\", {\n    \"id\": \"assessment\"\n  }, \"Assessment\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Test\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Weightage\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Midterm\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"20%\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4x Homework\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"10%\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Finals\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"70%\")))), mdx(\"h2\", {\n    \"id\": \"table-of-content\"\n  }, \"Table of Content\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"linear-programming\",\n    \"title\": \"Linear Programming\"\n  }, \"linear-programming\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"convex-sets-and-functions\",\n    \"title\": \"Convex Sets and Functions\"\n  }, \"convex-sets-and-functions\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"geometry-of-linear-programming\",\n    \"title\": \"Geometry of Linear Programming\"\n  }, \"geometry-of-linear-programming\"), \"]\")), mdx(\"h1\", {\n    \"id\": \"linear-programs\"\n  }, \"Linear Programs\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2dbc9521-5c29-5a8d-b70d-298cbff86895","fields":{"slug":"/ma3252/module-ma3252","title":"Linear and Network Optimization"}}}]},"fields":{"slug":"/ma3252/geometry-of-linear-programming","title":"Geometry of Linear Programming"}}},"pageContext":{"id":"7bb9cfcd-99cb-5de8-952d-7f05192f0cfd"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}