{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/ma2104/euclidean-spaces","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"euclidean-spaces\"\n  }, \"Euclidean Spaces\"), mdx(\"p\", null, \"Fix a natural number $n \\\\in \\\\N$.\"), mdx(\"p\", null, \"Set $\\\\R^n := \\\\R \\\\times \\\\R \\\\times ... \\\\times \\\\R :=$ { all ordered $n$-tuples }\\ncalled the standard ($n$-dimensional) vector space (over $\\\\R$)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$n$ is called the dimension of $\\\\R^n$\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"elements of $\\\\R^n$ are called vectors, points, $n$-tuples\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"elements of $\\\\R$ are called scalars\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if $\\\\vec \\\\mathbf{u} \\\\in \\\\R^n$ is a vector,\\nthen for each $i = 1, ..., n$, we call $u_i$ the $i^{th}$ component\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the vector $\\\\vec 0 := (0, ..., 0)$ is the zero vector (origin)\")), mdx(\"h2\", {\n    \"id\": \"vectors\"\n  }, \"Vectors\"), mdx(\"h3\", {\n    \"id\": \"operations-on-vectors\"\n  }, \"Operations on Vectors\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Addition \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add vectors componentwise\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Negation\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"apply distributively\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scalar multiplication\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"apply distributively\")))), mdx(\"h2\", {\n    \"id\": \"dot-product\"\n  }, \"Dot Product\"), mdx(\"p\", null, \"$( \\\\cdot ) : \\\\R^n \\\\times \\\\R^n \\\\rightarrow \\\\R$\"), mdx(\"p\", null, \"$$\\\\vec u \\\\cdot \\\\vec v = \\\\sum^n_{i = 1} u_i v_i$$\"), mdx(\"h3\", {\n    \"id\": \"properties-of-dot-product\"\n  }, \"Properties of Dot Product\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Symmetric\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commutative\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Associative w.r.t. scalar multiplication\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Distributive\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vec u \\\\cdot \\\\vec u = \\\\vert \\\\vec u \\\\vert ^2$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vec 0 \\\\cdot \\\\vec u = 0$\")), mdx(\"hr\", null), mdx(\"p\", null, \"Standard (n-dimensional) Euclidean space\\n: $\\\\R^n$ given with its vector space operations (+, -, scalar multiplication) and its dot product\"), mdx(\"hr\", null), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Any $\\\\vec u \\\\cdot \\\\vec u$ is always $\\\\geq 0$.\")), mdx(\"h3\", {\n    \"id\": \"length\"\n  }, \"Length\"), mdx(\"p\", null, \"$$\\\\vert \\\\vec u \\\\vert := \\\\sqrt{\\\\vec u \\\\cdot \\\\vec u}$$\"), mdx(\"h4\", {\n    \"id\": \"properties-of-vector-lengths\"\n  }, \"Properties of Vector Lengths\"), mdx(\"p\", null, \"If $\\\\vec u$ and $\\\\vec v$ are any vector and $c$ is a scalar, then\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vert \\\\vec u \\\\vert  = 0$ iff $\\\\vec u = \\\\vec 0$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vert c \\\\vec u \\\\vert = \\\\vert c \\\\vert \\\\vert \\\\vec u \\\\vert$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vert \\\\vec u + \\\\vec v \\\\vert  \\\\leq  \\\\vert \\\\vec u \\\\vert  +  \\\\vert \\\\vec v \\\\vert$\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"3 follows [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"triangle-inequality\",\n    \"title\": \"Triangle Inequality\"\n  }, \"triangle-inequality\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"unit-vectors\"\n  }, \"Unit Vectors\"), mdx(\"p\", null, \"Any vector with length $1$ is a unit vector\"), mdx(\"hr\", null), mdx(\"p\", null, \"Standard unit vector\\n: vector with 1 in some component and 0 in all others\"), mdx(\"hr\", null), mdx(\"h3\", {\n    \"id\": \"proposition\"\n  }, \"Proposition\"), mdx(\"p\", null, \"Any vector in $\\\\R^n$ is a linear combination of the standard unit vectors.\"), mdx(\"h3\", {\n    \"id\": \"direction-vectors\"\n  }, \"Direction Vectors\"), mdx(\"p\", null, \"If $\\\\vec v \\\\neq 0$ then $\\\\frac{\\\\vec v}{  \\\\vert \\\\vec v \\\\vert  }$ is called the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"direction\"), \" of the vector $\\\\vec v$.\"), mdx(\"h3\", {\n    \"id\": \"angle\"\n  }, \"Angle\"), mdx(\"p\", null, \"The angle between 2 nonzero vectors $\\\\vec u$ and $\\\\vec v$ is $\\\\theta = \\\\cos^{-1}(\\\\frac{\\\\vec u \\\\cdot \\\\vec v}{\\\\vert \\\\vec u \\\\vert \\\\vert \\\\vec v \\\\vert })$\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This has meaning because of [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"cauchy-schwarz-inequality\",\n    \"title\": \"Cauchy-Schwarz Inequality\"\n  }, \"cauchy-schwarz-inequality\"), \"] which restricts the possible values of $\\\\cos \\\\theta$.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vectors $\\\\vec u$ and $\\\\vec v$ are orthogonal if $\\\\vec u \\\\cdot \\\\vec v = 0$.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The scalar component of $\\\\vec u$ in the direction of $\\\\vec v$ is the scalar\\n$$\\\\vert \\\\vec u \\\\vert  \\\\cos \\\\theta = \\\\frac{\\\\vec u \\\\cdot \\\\vec v}{ \\\\vert \\\\vec v \\\\vert } = \\\\vec u \\\\cdot \\\\frac{\\\\vec v}{ \\\\vert \\\\vec v \\\\vert }$$\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$\\\\vec u$ dot product with unit direction vector of $\\\\vec v$\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The vector projection of $\\\\vec u$ onto $\\\\vec v$ is the vector\\n$$\\\\text{proj}_v \\\\vec u = (\\\\frac{\\\\vec u \\\\cdot \\\\vec v}{ \\\\vert \\\\vec v \\\\vert ^2}) \\\\vec v = (\\\\frac{\\\\vec u \\\\cdot \\\\vec v}{ \\\\vert \\\\vec v \\\\vert }) \\\\frac{\\\\vec v}{ \\\\vert \\\\vec v \\\\vert }$$\")), mdx(\"h2\", {\n    \"id\": \"cross-product\"\n  }, \"Cross Product\"), mdx(\"h3\", {\n    \"id\": \"cross-product-on-r3\"\n  }, \"Cross Product on $\\\\R^3$\"), mdx(\"p\", null, \"$( \\\\times ) : \\\\R^3 \\\\times \\\\R^3 \\\\rightarrow \\\\R^3$\"), mdx(\"p\", null, \"$$\\\\vec u \\\\times \\\\vec v = ( \\\\vert \\\\vec u \\\\vert |\\\\vec v \\\\vert  \\\\sin \\\\theta) \\\\vec n$$\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The magnitude of the normal vector is the area parallelogram formed by the 2 vectors\")), mdx(\"h4\", {\n    \"id\": \"cross-product-of-standard-vectors\"\n  }, \"Cross Product of Standard Vectors\"), mdx(\"p\", null, \"$$\\\\vec i \\\\times \\\\vec j = \\\\vec k$$\\n$$\\\\vec j \\\\times \\\\vec k = \\\\vec i$$\\n$$\\\\vec k \\\\times \\\\vec i = \\\\vec j$$\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"RHS follows a cyclic pattern (i-j-k)\")), mdx(\"h4\", {\n    \"id\": \"properties-of-the-cross-product\"\n  }, \"Properties of the Cross Product\"), mdx(\"p\", null, \"If $\\\\vec u$, $\\\\vec v$ and $\\\\vec w$ are any vectors and $r, s$ are scalars, then\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$(r \\\\vec u) \\\\times (s \\\\vec v) = (rs) (\\\\vec u \\\\times \\\\vec v)$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vec u \\\\times (\\\\vec v + \\\\vec w) = \\\\vec u \\\\times \\\\vec v + \\\\vec u \\\\times \\\\vec w$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vec v \\\\times \\\\vec u = -(\\\\vec u \\\\times \\\\vec v)$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$(\\\\vec v + \\\\vec w) \\\\times \\\\vec u = \\\\vec v \\\\times \\\\vec u + \\\\vec w \\\\times \\\\vec u$\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"$\\\\vec 0 \\\\times \\\\vec u = \\\\vec 0$\")), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"triple-product-formula\",\n    \"title\": \"Triple Product Formula\"\n  }, \"triple-product-formula\"), \"]\")), mdx(\"hr\", null), mdx(\"h4\", {\n    \"id\": \"proposition-1\"\n  }, \"Proposition\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For any $\\\\vec u, \\\\vec v \\\\in \\\\R^3$ one has $(\\\\vec u \\\\times \\\\vec v) \\\\cdot \\\\vec u = \\\\vec 0 = (\\\\vec u \\\\times \\\\vec v) \\\\cdot \\\\vec v$\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and if $\\\\vec u$ and $\\\\vec v$ are both $\\\\neq \\\\vec 0$, $\\\\vert \\\\vec u \\\\times \\\\vec v \\\\vert ^2 =  \\\\vert \\\\vec u \\\\vert ^2  \\\\vert \\\\vec v \\\\vert ^2 \\\\sin^2 \\\\theta$\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"$(\\\\vec u \\\\times \\\\vec v)$ is always orthogonal to both $\\\\vec u$ and $\\\\vec v$.\")), mdx(\"h4\", {\n    \"id\": \"lines-and-planes\"\n  }, \"Lines and Planes\"), mdx(\"p\", null, \"A vector equation for the line $L$, through $P_0(x_0, y_0, z_0)$ parallel to $\\\\vec v$ is\\n$$\\\\vec r(t) = \\\\vec r_0 + r \\\\vec v$$\"), mdx(\"p\", null, \"Extending the components, we get the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"parametric equations for a line\"), \".\"), mdx(\"p\", null, \"$$x = x_0 + tv_1, y = y_0 + tv_2, z = z_0 + tv_3$$\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note that the parameterization are not unique.\\nYou can choose any scalar multiple for $\\\\vec v$ or different \\\"starting point\\\".\")), mdx(\"h5\", {\n    \"id\": \"distance-from-a-point-s-to-a-line-through-p-parallel-to-v\"\n  }, \"Distance from a Point $S$ to a Line Through $P$ parallel to $v$\"), mdx(\"p\", null, \"$$d = \\\\frac{\\\\vert \\\\vec{PS} \\\\times \\\\vec v \\\\vert}{\\\\vert \\\\vec v \\\\vert}$$\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"triangle-inequality\"\n  }, \"Triangle Inequality\"), mdx(\"p\", null, \"Suffices to show \"), mdx(\"p\", null, \"$$\\n\\\\begin{aligned}\\n|\\\\vec u + \\\\vec v|^2 &\\\\leq ( |\\\\vec u||\\\\vec v| )^2 \", \"\\\\\", \"\\n(\\\\vec{u} \\\\cdot \\\\vec v)^2 &\\\\leq |\\\\vec u|^2 + |\\\\vec v|^2 + 2|\\\\vec u||\\\\vec v| \", \"\\\\\", \"\\n\\\\vec u \\\\cdot \\\\vec u + 2 \\\\vec u \\\\cdot \\\\vec v + \\\\vec v \\\\cdot \\\\vec v & \\\\leq |\\\\vec u|^2 + |\\\\vec v|^2 + 2|\\\\vec u||\\\\vec v| \", \"\\\\\", \"\\n\\\\vec u \\\\cdot \\\\vec v &\\\\leq |\\\\vec u||\\\\vec v|\\n\\\\end{aligned}\\n$$\"), mdx(\"p\", null, \"which follow from [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"cauchy-schwarz-inequality\",\n    \"title\": \"Cauchy-Schwarz Inequality\"\n  }, \"cauchy-schwarz-inequality\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"13c561a3-4769-554f-82a2-2d2d67209ce1","fields":{"slug":"/ma2104/triangle-inequality","title":"Triangle Inequality"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cauchy-schwarz-inequality\"\n  }, \"Cauchy-Schwarz Inequality\"), mdx(\"p\", null, \"For any $\\\\vec u, \\\\vec v \\\\in \\\\R^n$,\"), mdx(\"p\", null, \"$$\\n\\\\begin{aligned}\\n\\\\vec u \\\\cdot \\\\vec v &\\\\leq |\\\\vec u||\\\\vec v| \", \"\\\\\", \"\\n\\\\text{i.e. } (\\\\vec{u} \\\\cdot \\\\vec v)^2 &\\\\leq (\\\\vec u \\\\cdot \\\\vec u) (\\\\vec v \\\\cdot \\\\vec v)\\n\\\\end{aligned}\\n$$\"), mdx(\"h2\", {\n    \"id\": \"proof\"\n  }, \"Proof\"), mdx(\"p\", null, \"If $\\\\vec u = \\\\vec 0 \\\\in \\\\R^n$, then LHS = 0 = RHS.\"), mdx(\"p\", null, \"Assume $\\\\vec u \\\\neq \\\\vec 0$. Consider the quadratic polynomial\"), mdx(\"p\", null, \"$$\\n\\\\begin{aligned}\\n&(\\\\vec u \\\\cdot \\\\vec u)x^2 + 2(\\\\vec u \\\\cdot \\\\vec v)x + (\\\\vec{v} \\\\cdot \\\\vec{v}) \", \"\\\\\", \"\\n&= (\\\\sum^n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"{i = 1} {u_i}^2) x^2 + (2 \\\\sum^n\"), \"{i = 1} {u\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"i} v_i) x + (\\\\sum^n\"), \"{i = 1} {v\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"i}^2) \", \"\\\\\", \"\\n&= \\\\sum^n\"), \"{i = 1} (u_i x + v_i)^2 \", \"\\\\\", \"\\n& \\\\Rightarrow \\\\text{discriminant of polynomial is } \\\\leq 0 \", \"\\\\\", \"\\n&\\\\therefore 4(\\\\vec u \\\\cdot \\\\vec v)^2 - 4(\\\\vec u \\\\cdot \\\\vec{u})(\\\\vec{v} \\\\cdot \\\\vec{v}) \\\\leq 0 \", \"\\\\\", \"\\n&\\\\therefore (\\\\vec{u} \\\\cdot \\\\vec v)^2 \\\\leq (\\\\vec u \\\\cdot \\\\vec u) (\\\\vec v \\\\cdot \\\\vec v)\\n\\\\end{aligned}\\n$$\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"d801f8ed-6113-58b7-a87b-c22c136dc50f","fields":{"slug":"/ma2104/cauchy-schwarz-inequality","title":"Cauchy-Schwarz Inequality"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"triple-product-formula\"\n  }, \"Triple Product Formula\"), mdx(\"p\", null, \"For any $\\\\vec u, \\\\vec v, \\\\vec w \\\\in \\\\R^3$,\"), mdx(\"p\", null, \"$$ (\\\\vec u \\\\times \\\\vec v \\\\cdot \\\\vec w) = \\\\begin{vmatrix}\\nu_1 & u_2 & u_3 \", \"\\\\\", \"\\nv_1 & v_2 & v_3 \", \"\\\\\", \"\\nw_1 & w_2 & w_3\\n\\\\end{vmatrix} \\\\in \\\\R$$\"), mdx(\"h2\", {\n    \"id\": \"proof\"\n  }, \"Proof\"), mdx(\"p\", null, \"$$\\n\\\\begin{aligned}\\n(\\\\vec u \\\\times \\\\vec v \\\\cdot \\\\vec w) &=\\n(\\\\begin{vmatrix}\\nu_2 & u_3 \", \"\\\\\", \"\\nv_2 & v_3\\n\\\\end{vmatrix} \\\\vec i -\\n\\\\begin{vmatrix}\\nu_1 & u_3 \", \"\\\\\", \"\\nv_1 & v_3\\n\\\\end{vmatrix} \\\\vec j +\\n\\\\begin{vmatrix}\\nu_1 & u_2 \", \"\\\\\", \"\\nv_1 & v_2\\n\\\\end{vmatrix} \\\\vec k) \", \"\\\\\", \"\\n&= (w_1 \\\\begin{vmatrix}\\nu_2 & u_3 \", \"\\\\\", \"\\nv_2 & v_3\\n\\\\end{vmatrix} -\\nw_2 \\\\begin{vmatrix}\\nu_1 & u_3 \", \"\\\\\", \"\\nv_1 & v_3\\n\\\\end{vmatrix} +\\nw_3 \\\\begin{vmatrix}\\nu_1 & u_2 \", \"\\\\\", \"\\nv_1 & v_2\\n\\\\end{vmatrix} ) \", \"\\\\\", \"\\n&= \\\\begin{vmatrix}\\nu_1 & u_2 & u_3 \", \"\\\\\", \"\\nv_1 & v_2 & v_3 \", \"\\\\\", \"\\nw_1 & w_2 & w_3\\n\\\\end{vmatrix}\"), mdx(\"p\", null, \"\\\\end{aligned}\\n$$\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Expansion of $3 \\\\times 3$ determinant along the 3rd row.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"bb0af0c8-35d7-5ce1-9a1b-dfca5d016441","fields":{"slug":"/ma2104/triple-product-formula","title":"Triple Product Formula"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"multivariable-calculus\"\n  }, \"Multivariable Calculus\"), mdx(\"p\", null, \"#entry\"), mdx(\"h2\", {\n    \"id\": \"module-information\"\n  }, \"Module Information\"), mdx(\"p\", null, \"Lectures will be pre-recorded and uploaded every Tuesday and Friday before 12pm in multimedia.\"), mdx(\"p\", null, \"Focus of the lectures will be on the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"mathematical concepts and proofs\"), \".\"), mdx(\"p\", null, \"Tutorials will alternate between \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"lecture on a topic\"), \" (part of tested materials) and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"discussion of the homework problems\"), \".\"), mdx(\"p\", null, \"Tutorials are also pre-recorded and uploaded on Luminus before Wednesday, 2pm.\"), mdx(\"h2\", {\n    \"id\": \"assessment\"\n  }, \"Assessment\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Test\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Weightage\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"5x Homework\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"40%\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Finals\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"60%\")))), mdx(\"h2\", {\n    \"id\": \"textbook\"\n  }, \"Textbook\"), mdx(\"p\", null, \"Thomas, Calculus, 14th ed., - Hass, Heil & Weir\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chapters 11 - 16\")), mdx(\"h2\", {\n    \"id\": \"table-of-contents\"\n  }, \"Table of Contents\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"euclidean-spaces\",\n    \"title\": \"Euclidean Spaces\"\n  }, \"euclidean-spaces\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"curves\",\n    \"title\": \"Curves in $\\\\R^n$\"\n  }, \"curves\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"multivariable-functions\",\n    \"title\": \"Multivariable Functions\"\n  }, \"multivariable-functions\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"higher-order-derivatives\",\n    \"title\": \"Higher Order Derivatives\"\n  }, \"higher-order-derivatives\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4667b8ff-5878-5615-8823-9a1a640cc0db","fields":{"slug":"/ma2104/module-ma2104","title":"Multivariable Calculus"}}}]},"fields":{"slug":"/ma2104/euclidean-spaces","title":"Euclidean Spaces"}}},"pageContext":{"id":"02531be3-5813-56f5-a390-11209663b616"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}